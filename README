Special Thanks to Jordan Leigh and the whole 3Binary crew for their technical assistance!


Annotatoin Plugin User Story

CREATE
1. User clicks on image *DONE*
2. All existing form fields on image are removed from DOM *DONE*
3. New form pops up at point of click *DONE* 
4. If cancel button is hit, then user story 2 should remove all the forms *DONE*
5. If checkmark or enter is hit, AJAX creates comment
  -> Form is removed *DONE*
  -> Comment pops up in blue bar on right *DONE*
  -> black dot is put at point of click *DONE*
  -> both comment and black dot have id equal to annotation_count, which is a document_version model.

DESTROY
1. If black dot on image is clicked
  -> DELETE to db to delete annotation
  -> remove black dot on image
2. If X near Annotation is clicked
  -> DELETE to db to delete annotation

DocumentVersion should have annotation count, that's the only way to consistently manage the issue!




MODELS:
User, Project, Document, DocumentVersion, Annotation, Collaborators

User has_many Projects
Project has_many Documents
Document has_many DocumentVersions
Document has_many Collaborators
DocumentVersion has_many Annotations

Likewise...
Projects belong_to User
Document belong_to Project
DocumentVersion belong_to Document
Collaborator belong_to Document
Annoation belong_to DocumentVersion

Note: Users and Projects are nested routes (Users/1/Projects/4, etc), every other asset is not nested routes.


TO DO:
1. Get annoations working as good as possible (I'll try do do from India what I can), when I come back I can do that. 

2. PDF's wont' display as images that can be annotated over. I think the solution is to use Carrierwave Gem with ImageMagick to create an image of the pdf when it is uploaded... See the great railscasts on using carrierwave and carrierwave uploading to Amazon S3 for how our uploading is done.

3. Stitch together flow of main user views, so after login they go to Dasbaord and see Projects, they click on Project and see list of Documents, click on Document and see list of DocumentVersions, click on Document Version and they can then click on link to Annotate it. Each of these pages has various links working and not working, nothing too serious, just point them in the right direction. Figure out where/how by using rake routes command in terminal. Put in all their views. 

TO STYLE ANNOTATION BUBBLE:
Look at the css file called annotations, make a class with whatever styling you want in there. In the annoations.js.coffee file, on line 9 replace the class='black' portion of the string with class='what you made'. Basically the idea is that on click, a div is put above the image.

ABOUT ANNOTATIONS:
It's a script that takes a click inside the div with the id of "image-area" and adds a div on top of that based off the xOffset and yOffset the click event. From there it should use the jqry AJAX function to talk to the server. If you uncomment the jquery in lines 18-23 of annotation.js.coffee, each click will communicate with the server. However maybe it needs to happne when the user submits the comment. 

There is no plugin being used for annotations, I tried to use Zurb Foundation Annotation, but it's out of date and not working with Rails 3.2.11, it was originally built for Rails 2, so something is broken with it now. 



Qacio
========================

This application was generated with the rails_apps_composer gem:
https://github.com/RailsApps/rails_apps_composer
provided by the RailsApps Project:
http://railsapps.github.com/

________________________

Recipes:
["controllers", "core", "email", "extras", "frontend", "gems", "git", "init", "models", "prelaunch", "railsapps", "readme", "routes", "saas", "setup", "testing", "views"]

Preferences:
{:git=>true, :railsapps=>"none", :dev_webserver=>"webrick", :database=>"sqlite", :templates=>"erb", :unit_test=>"test_unit", :integration=>"none", :fixtures=>"none", :frontend=>"foundation", :email=>"none", :authentication=>"devise", :devise_modules=>"default", :authorization=>"none", :form_builder=>"none", :starter_app=>"users_app", :quiet_assets=>true, :local_env_file=>true, :better_errors=>true, :ban_spiders=>true}

________________________

License
